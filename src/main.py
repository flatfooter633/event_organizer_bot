from aiogram import Bot, Dispatcher
from sqlalchemy import select

from src.config.config import settings
from src.config.logger_config import logger
from src.database.database import init_db, get_db
from src.database.models import SystemSetting
from src.handlers.main_handlers import router as main_router
from src.handlers.service_handlers import router as service_router
from src.middleware.middleware import AdminAuthMiddleware, AdminCallbackMiddleware
from src.utils.scheduler import setup_scheduler

bot = Bot(token=settings.BOT_TOKEN)
dp = Dispatcher()


async def init_system_settings():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ"""
    async with get_db() as session:
        # –°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        default_settings = [
            {
                "key": "VIDEO_FILE_ID",
                "value": "BAACAgIAAxkBAAIBbmfj4yKSZbFvWyPNLLBJu8eTzktYAAI_XQACLii5SMpj3AdHdHycNgQ",
                "description": "ID –≤–∏–¥–µ–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤ Telegram",
            },
            {
                "key": "ADMIN_COMMANDS_TEXT",
                "value": "\n\nüì¢ <b>–†–∞—Å—Å—ã–ª–∫–∏:</b>"
                "\n\n - ‚úÖ /broadcast - –¥–æ–±–∞–≤–∏—Ç—å"
                "\n\n\nüìÖ <b>–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b>"
                "\n\n - ‚úÖ /add_event - –¥–æ–±–∞–≤–∏—Ç—å"
                "\n\n - üö´ /cancel_event - –æ—Ç–º–µ–Ω–∏—Ç—å"
                "\n\n - ‚úèÔ∏è /edit_questions - —Ä–µ–¥–∞–∫—Ç–∏—Ä. –∞–Ω–∫–µ—Ç—ã"
                "\n\n - üé¨ /set_welcome_video - –≤–∏–¥–µ–æ"
                "\n\n - üì§ /export_answers - –≤—ã–≥—Ä—É–∑–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤"
                "\n\n - üóÇ /view_registrations - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–æ–≤"
                "\n\n\nüë®‚Äçüíª <b>–ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã:</b>"
                "\n\n - ü•ã /add_admin - –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º"
                "\n\n - üîê /change_password - —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞",
                "description": "–¢–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
            },
            {
                "key": "START_MESSAGE",
                "value": "–Ø ‚Äî <b>–ö–∞—Ä–∏–Ω–∞ –ë–æ–≥–¥–∞–Ω–æ–≤–∞</b>, –ø—Å–∏—Ö–æ–ª–æ–≥, –≥–µ—à—Ç–∞–ª—å—Ç-—Ç–µ—Ä–∞–ø–µ–≤—Ç –∏ —Ç—Ä–µ–Ω–µ—Ä.\n\n"
                "–£–∂–µ –ø–æ—á—Ç–∏ 10 –ª–µ—Ç —è –≤–µ–¥—É —á–∞—Å—Ç–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É –∏ –ø–æ–º–æ–≥–∞—é –ø—Å–∏—Ö–æ–ª–æ–≥–∞–º –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤.\n\n"
                "–ó–¥–µ—Å—å, –≤ –±–æ—Ç–µ, —Ç–µ–±—è –∂–¥—É—Ç 3 –ø–æ–ª–µ–∑–Ω—ã—Ö –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:\n\n"
                "üé• –° —á–µ–≥–æ –Ω–∞—á–∞—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥—É?\n\n"
                "üé• –ü–æ—á–µ–º—É –∫–ª–∏–µ–Ω—Ç—ã –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—ã —ç–∫—Å–ø–µ—Ä—Ç?\n\n"
                "üé• –ü–æ—á–µ–º—É –ø—Å–∏—Ö–æ–ª–æ–≥–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –ø–æ-—Ä–∞–∑–Ω–æ–º—É?\n\n\n",
                "description": "–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞",
            },
            {
                "key": "WELCOME_MESSAGE",
                "value": "üí° <b>–ù–æ —Å–Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è!</b>\n\n"
                "–ù–∞–ø–∏—à–∏ —Ü–∏—Ñ—Ä—É, –∫–æ—Ç–æ—Ä–∞—è –±–ª–∏–∂–µ –≤—Å–µ–≥–æ –∫ —Ç–≤–æ–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏:\n\n"
                "1Ô∏è‚É£ –ï—â—ë —É—á—É—Å—å, –Ω–æ —Ö–æ—á—É –Ω–∞—á–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å\n"
                "2Ô∏è‚É£ –£–∂–µ –µ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç—ã, –Ω–æ –º–∞–ª–æ, —Ö–æ—á—É —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫\n"
                "3Ô∏è‚É£ –†–∞–±–æ—Ç–∞—é —Å—Ç–∞–±–∏–ª—å–Ω–æ, –Ω–æ —Ö–æ—á—É –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–µ\n\n"
                "<b>–ñ–¥—É —Ç–≤–æ–π –æ—Ç–≤–µ—Ç üëá —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —Ç–æ—á–µ—á–Ω–æ üî•</b>",
                "description": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            },
        ]

        # –ó–∞–ø–∏—Å—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –±–∞–∑—É, –µ—Å–ª–∏ –∏—Ö –µ—â—ë –Ω–µ—Ç
        for setting in default_settings:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
            stmt = select(SystemSetting).where(SystemSetting.key == setting["key"])
            result = await session.execute(stmt)
            existing = result.scalars().first()

            if not existing:
                # –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ—ë
                new_setting = SystemSetting(
                    key=setting["key"],
                    value=setting["value"],
                    description=setting["description"],
                )
                session.add(new_setting)

        await session.commit()


async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    await init_db()
    await init_system_settings()

    dp.message.middleware(AdminAuthMiddleware())
    dp.update.middleware.register(AdminCallbackMiddleware())
    dp.callback_query.middleware(AdminCallbackMiddleware())

    dp.include_router(main_router)
    dp.include_router(service_router)

    scheduler = setup_scheduler(bot)
    if scheduler:
        logger.info("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω.")

    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
    finally:
        logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
        await logger.complete()  # –î–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–ø–∏—Å–∏ –≤—Å–µ—Ö –ª–æ–≥–æ–≤


if __name__ == "__main__":
    import asyncio

    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
